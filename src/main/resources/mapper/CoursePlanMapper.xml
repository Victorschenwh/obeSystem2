<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbsy.obe.mapper.CoursePlanMapper">
  <resultMap id="BaseResultMap" type="com.dbsy.obe.pojo.CoursePlan">
    <constructor>
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="plan_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="total_hours" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="theory_hours" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="experiment_hours" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="credit" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="study_term" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.dbsy.obe.pojo.CoursePlan">
    insert into course_plan (id, course_id, plan_id, 
      total_hours, theory_hours, experiment_hours, 
      credit, study_term)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{planId,jdbcType=INTEGER}, 
      #{totalHours,jdbcType=INTEGER}, #{theoryHours,jdbcType=INTEGER}, #{experimentHours,jdbcType=INTEGER}, 
      #{credit,jdbcType=INTEGER}, #{studyTerm,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dbsy.obe.pojo.CoursePlan">
    insert into course_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="totalHours != null">
        total_hours,
      </if>
      <if test="theoryHours != null">
        theory_hours,
      </if>
      <if test="experimentHours != null">
        experiment_hours,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="studyTerm != null">
        study_term,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="totalHours != null">
        #{totalHours,jdbcType=INTEGER},
      </if>
      <if test="theoryHours != null">
        #{theoryHours,jdbcType=INTEGER},
      </if>
      <if test="experimentHours != null">
        #{experimentHours,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="studyTerm != null">
        #{studyTerm,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!--&lt;resultMap id="BaseResultMap" type="com.dbsy.obe.pojo.CoursePlan"&gt;
    &lt;constructor&gt;
      &lt;arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" /&gt;
      &lt;arg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" /&gt;
      &lt;arg column="plan_id" javaType="java.lang.Integer" jdbcType="INTEGER" /&gt;
      &lt;arg column="total_hours" javaType="java.lang.Integer" jdbcType="INTEGER" /&gt;
      &lt;arg column="theory_hours" javaType="java.lang.Integer" jdbcType="INTEGER" /&gt;
      &lt;arg column="experiment_hours" javaType="java.lang.Integer" jdbcType="INTEGER" /&gt;
      &lt;arg column="credit" javaType="java.lang.Integer" jdbcType="INTEGER" /&gt;
      &lt;arg column="study_term" javaType="java.lang.String" jdbcType="VARCHAR" /&gt;
    &lt;/constructor&gt;
  &lt;/resultMap&gt;-->

  <select id="list" resultType="com.dbsy.obe.pojo.CoursePlan">
    select * from course_plan
    <where>
      <if test="id != null">
        or id like concat('%',#{id},'%')
      </if>
    </where>
    <if test="page!=null and pageSize != null">
      limit (#{page}-1)* #{pageSize},#{pageSize}
    </if>
  </select>

  <select id="listCount" resultType="int">
    select count(*) from course_plan
    <where>
      <if test="id != null">
        or id like concat('%',#{id},'%')
      </if>
    </where>
  </select>



  <delete id="batchRemove">
    delete from course_plan where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>