<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbsy.obe.mapper.CoursePointMapper">
 <!-- <resultMap id="BaseResultMap" type="com.dbsy.obe.pojo.CoursePoint">
    <constructor>
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="point_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="weight" javaType="java.lang.Double" jdbcType="DOUBLE" />
    </constructor>
  </resultMap>-->
  <insert id="insert" parameterType="com.dbsy.obe.pojo.CoursePoint">
    insert into course_point (id, course_id, point_id, 
      weight)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{pointId,jdbcType=INTEGER}, 
      #{weight,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.dbsy.obe.pojo.CoursePoint">
    insert into course_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="pointId != null">
        point_id,
      </if>
      <if test="weight != null">
        weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="pointId != null">
        #{pointId,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>

  <select id="list" resultType="com.dbsy.obe.pojo.CoursePoint">
    select * from course_point
    <where>
      <if test="name != null">
        or name like concat('%',#{name},'%')
      </if>
    </where>
    <if test="page!=null and pageSize != null">
      limit (#{page}-1)* #{pageSize},#{pageSize}
    </if>
  </select>

  <select id="listCount" resultType="int">
    select count(*) from course_point
    <where>
      <if test="name != null">
        or name like concat('%',#{name},'%')
      </if>
    </where>
  </select>

  <delete id="batchRemove">
    delete from course_point where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>